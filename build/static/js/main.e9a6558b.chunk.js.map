{"version":3,"sources":["i18n.js","App.js","reportWebVitals.js","index.js"],"names":["resources","en","si","ta","i18n","use","initReactI18next","init","lng","interpolation","escapeValue","App","t","useTranslation","chooseLanguage","lang","i18next","changeLanguage","className","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qOAQMA,EAAY,CACdC,G,KAAGC,G,KAAIC,G,MAGXC,IACKC,IAAIC,KACJC,KAAK,CACFP,YACAQ,IAAK,KACLC,cAAe,CACXC,aAAa,KAKVN,EAAf,EAAeA,I,uBC+BAO,MAlDf,WACE,IAAQC,EAAMC,cAAND,EAEN,SAASE,EAAeC,GACpBC,IAAQC,eAAeF,GAG7B,OACI,sBAAKG,UAAU,MAAf,UACI,qBAAKA,UAAW,MAAhB,SACI,sBAAKA,UAAW,6CAAhB,UACI,wBAAQC,QAAS,kBAAIL,EAAe,OAAOI,UAAW,kBAAtD,qBAGA,wBAAQC,QAAS,kBAAIL,EAAe,OAAOI,UAAW,uBAAtD,uBAGA,wBAAQC,QAAS,kBAAIL,EAAe,OAAOI,UAAW,kBAAtD,wBAKR,qBAAKA,UAAW,WAAhB,SACI,sBAAKA,UAAW,MAAhB,UACI,qBAAKA,UAAW,MAAhB,SACI,qBAAKA,UAAW,kBAAhB,SACI,6BAAKN,EAAE,eAGf,qBAAKM,UAAW,MAAhB,SACI,qBAAKA,UAAW,kBAAhB,SACI,6BAAKN,EAAE,qBAGf,qBAAKM,UAAW,MAAhB,SACI,qBAAKA,UAAW,kBAAhB,SACI,6BAAKN,EAAE,qBAGf,qBAAKM,UAAW,MAAhB,SACI,qBAAKA,UAAW,2BAAhB,SACI,6BAAKN,EAAE,0BCjClBQ,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,SAO5Bb,K","file":"static/js/main.e9a6558b.chunk.js","sourcesContent":["\nimport i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\n\nimport en from \"./assets/locales/en.json\"\nimport si from \"./assets/locales/si.json\"\nimport ta from \"./assets/locales/ta.json\"\n\nconst resources = {\n    en,si, ta\n}\n\ni18n\n    .use(initReactI18next)\n    .init({\n        resources,\n        lng: \"si\",\n        interpolation: {\n            escapeValue: false\n        }\n    });\n\n\nexport default i18n;","import { useTranslation } from 'react-i18next';\nimport i18next from 'i18next';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction App() {\n  const { t } = useTranslation();\n\n    function chooseLanguage(lang) {\n        i18next.changeLanguage(lang)\n    }\n\n  return (\n      <div className=\"App\">\n          <div className={\"row\"}>\n              <div className={'col, mx-auto bg-secondary text-center py-4'}>\n                  <button onClick={()=>chooseLanguage('en')} className={\"btn btn-primary\"}>\n                      English\n                  </button>\n                  <button onClick={()=>chooseLanguage('si')} className={\"btn btn-success mx-2\"}>\n                      Sinhalese\n                  </button>\n                  <button onClick={()=>chooseLanguage('ta')} className={\"btn btn-warning\"}>\n                      Tamil\n                  </button>\n              </div>\n          </div>\n          <div className={\"row my-3\"}>\n              <div className={\"col\"}>\n                  <div className={\"row\"}>\n                      <div className={\"col text-center\"}>\n                          <h1>{t('hello')}</h1>\n                      </div>\n                  </div>\n                  <div className={\"row\"}>\n                      <div className={\"col text-center\"}>\n                          <h2>{t('paragraph_1')}</h2>\n                      </div>\n                  </div>\n                  <div className={\"row\"}>\n                      <div className={\"col text-center\"}>\n                          <h1>{t('sample_para')}</h1>\n                      </div>\n                  </div>\n                  <div className={\"row\"}>\n                      <div className={\"col text-center mx-5 p-5\"}>\n                          <h5>{t('to_read')}</h5>\n                      </div>\n                  </div>\n              </div>\n          </div>\n      </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport \"./i18n\"\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}